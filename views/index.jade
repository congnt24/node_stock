extends layout

block content
    div#container(style="height: 400px; min-width: 310px")


    div
        input#symbol(type='text' placeholder='symbol')
        input#add(type='submit' value='Add')
        //- var its = items.split(',')
        div#content
        if items != undefined
            for item in items
                div(style="background-color: #ebebeb;")
                    p= item
                    input(type='submit' value='delete' onclick='$(this).removeChart(\'' + item + '\')')


    script.
        var symbs = ['']
        $(function () {
            var socket = new WebSocket("wss://congntstock.herokuapp.com");
            socket.onmessage = function (event) {
                console.log(event.data)
                var json = JSON.parse(event.data)
                if (json.type == 'add') {
                    addChart(json.symbol)
                } else {
                    removeChart(json.symbol)
                }
            }


            if ('#{symbols}' != '') {
                symbs = '#{symbols}'.split(',');
            }

            var chart = new Highcharts.stockChart('container', {
                rangeSelector: {
                    selected: 6
                },

                title: {
                    text: 'Stock Price'
                },

                series: [{}]
            });

            function removeChart(data) {
                for (var i = 0; i < chart.series.length; i++) {
                    if (chart.series[i].name == data) {
                        chart.series[i].remove()
                        symbs.splice(symbs.indexOf(data), 1)
                        $('.' + data).remove()
                        $.getJSON('/remove/' + data, function (data) {

                        })
                    }
                }
            }

            //remove
            $.fn.removeChart = function (sym) {
                //removeChart(sym)
                socket.send("{\"type\": \"delete\", \"symbol\": \"" + sym + "\"}")
            }

            if ('!{items}' != '') {
                var sbs = '!{items}'.split(',')
                $.getJSON('/symbols/' + sbs, function (data) {
                    data.forEach(function (dat) {
                        chart.addSeries({
                            name: dat.name,
                            data: dat.data,
                            tooltip: {
                                valueDecimals: 2
                            }
                        })
                    })
                });
            }

            function addChart(sym) {
                if (symbs.indexOf(sym) == -1) {
                    symbs.push(sym)
                    $.getJSON('/symbol/' + sym, function (data) {
                        chart.addSeries({
                            name: sym,
                            data: data,
                            tooltip: {
                                valueDecimals: 2
                            }
                        })
                        $('#content').append('<div class="' +
                            sym +
                            '" style="background-color: #ebebeb;"><p>' +
                            sym +
                            '</p><input type="submit" value="delete" onclick="$(this).removeChart(\'' +
                            sym +
                            '\')"/></div>')
                    });
                } else {
                    //alert('You\'re already added this symbol')
                }
            }

            $('#add').on('click', function () {
                var sym = $('#symbol').val()
                socket.send("{\"type\": \"add\", \"symbol\": \"" + sym + "\"}")
                //addChart(sym)
            })
        })



